<!DOCTYPE HTML>
<html>
<head>
<meta charset="UTF-8"/>
<title>cluster map test</title>
<link rel="stylesheet" type="text/css" href="/magic-deal/semantic/semantic.min.css">
<link rel="stylesheet" type="text/css" href="/magic-deal/css/global.css">
<link rel="stylesheet" type="text/css" href="/magic-deal/css/header.css">
<link rel="stylesheet" type="text/css" href="/magic-deal/css/nav.css">
<style>
	aside {
		z-index : 1;
		width : 400px;
		height : 100%;
		position : absolute;
		top : 0px;
		right : 0px;
		background-color : #f5f5f5;
		padding-top : 120px;
		transition : width 0.5s;
	}

	#asideBox {
		width : 100%;
		height : 100%;
		border-left : 1px solid #dfdfdf;
		text-align : center;
	}

	#resultBoxWrap {
		width : 100%;
		max-width : 1024px;
		height : 100%;
		margin : 0px auto;
		position : relative;
	}

	#resultBox {
		position : absolute;
		top : 30px;
		width : 100%;

		overflow-y : auto;
	}

	#resultBox>.productBox {
		width : 100%;
		height : 100px;
		border-bottom : 1px solid #bbb;
		font-size : 13px;
		position : relative;
		margin-bottom : 5px;
	}

	#resultBox>.productBox>.productImg {
		display : inline-block;
		width : 100px;
		height : 100%;
		background-size : 100% 100%;
		position : absolute;
		left : 0px;

	}

	#resultBox>.productBox>.productInfo {
		display : inline-block;
		position : absolute;
		left : 100px;
		width : 280px;
		height : 100%;
	}

	#resultBox>.productBox>.productInfo>table {
		width : 280px;
		border-collapse : collapse;
		height : 100px;
		text-align : center;
		font-size : 14px;
	}


	#resultBoxWrap>#boxLabel {
		position : absolute;
		top : 0px;
		left : 0px;
		height : 30px;
		background-color : #008080;
		line-height : 30px;
		width : 100%;
		display : block;
		font-size : 14px;
		padding-left : 10px;
		text-align : left;
		color : #f0f0f0;
	}

	#resultBoxWrap>#pageBox {
		position : fixed;
		bottom : 0px;
		right : 0px;
		width : 400px;
		height : 30px;
		border-top : 1px solid #aaa;
		transition : width 0.5s;
	}

	#resultBoxWrap>#pageBox>input[type="button"] {
		width : 100%;
		height : 30px;
		border : none;
		outline : none;
	}

	#mapBox {
		width : 100%;
		height : 100%;
		padding-top : 120px;
		padding-right : 400px;
		background-color : #333;
		z-index : -1;
	}

	#map {
		width : 100%;
		height : 100%;
		position : relative;
		z-index : 0;
	}

	.dot {
		width : 16px;
		height : 16px;
		background-color : rgba(255,255,255,0.9);
		border-radius : 8px;
		display : inline-block;
		border : 4px solid orange;
	}

	.distanceInfo {
		font-size : 12px;
		background-color : rgba(10,10,10,0.8);
		display : inline-block;
		padding : 5px;
		border : 3px solid orange;
		border-radius : 4px;
		width : 150px;
		height : 90px;
		color : #f0f0f0;
	}

	.distanceLabel {
		width : 40px;
		display : inline-block;
		border-right : 2px solid orange;
		margin-bottom : 5px;
	}

	.distanceNumber {
		width : 90px;
		text-align : center;
		display : inline-block;
	}

	.distanceTitle {
		width : 100%;
		text-align : center;
		padding : 2px;
		margin-bottom : 5px;
		background-color : rgba(255,180,10,0.8);
		font-size : 14px;
	}

	.loadingPointer {
		width : 40px;
		height : 40px;
		border-radius : 100% 100% 0% 100%;
		border : 2px solid snow;
		position : relative;
		-webkit-transform : rotate(45deg);
		animation : loadingAni 0.5s ease-in-out 0.1s infinite alternate;
		padding : 10px;
	}

	.loadingPointerDot {
		background-color : tomato;
		width : 15px;
		height : 15px;
		border-radius : 50%;
	}

	.loadingBottom {
		background-color : rgba(255,255,255,0.2);
		width : 40px;
		height : 40px;
		border-radius : 50%;
		margin-bottom : -10px;
		-webkit-transform : rotateX(73deg);
	}

	.loadingIconBox {
		width : 40px;
		margin : 0px auto;
	}

	#loadingContainer {
		position : absolute;
		width : 100%;
		height : 100px;
		text-align : center;
	}

	#loadingContainer>span {
		font-size : 15px;
		color : white;
	}

	@keyframes loadingAni {
		from {
			top : 0px;
		}

		to {
			top : 7px;
		}
	}

	#searchCondition {
		width : 100%;
		padding-right : 25px;
		padding-left : 70px;
		background-color : #f0f0f0;
		position : absolute;
		top : 70px;
		height : 50px;
		z-index : 1;
		border-bottom : 1px solid #d8d8d8;
		padding-top : 10px;
		font-size : 14px;
	}

	.selectMenu {
		float : left;
		padding-right : 15px;
		background-color : white;
		background-image : url("../img/arrow_down.svg");
		background-position : right 3px;
		background-repeat : no-repeat;
		background-size : 15px;
		height : 20px;
		margin-right : 30px;
		overflow : hidden;
		border-radius : 3px;
		border : 1px solid #d8d8d8;
		transition : all 0.3s;
		cursor : pointer;
	}

	.selectMenu>span {
		width : 70px;
		font-size : 14px;
		display : block;
		padding : 3px;
		height : 20px;
		border-bottom : solid 1px #d8d8d8;
		cursor : pointer;
		transition : background-color 0.3s;
	}

	.tradeSelectOpen {
		height : 80px;
	}

	.qualitySelectOpen {
		height : 100px;
	}

	.selectMenu>span:hover {
		background-color : #bbbbff;
	}

	.priceMenu {
		float : left;
		height : 20px;
	}

	.priceMenu>input[type="number"] {
		border : 1px solid #d8d8d8;
		border-radius : 3px;
		width : 50px;
		outline : none;
		height : 20px;
		margin : 0px 3px 0px 3px;
		padding-left : 3px;
		text-align : right;
	}

	.priceMenu>input[type="button"] {
		border : 1px solid #222;
		background-color : #FFD700;
		border-radius : 3px;
		width : 40px;
		outline : none;
		height : 20px;
		margin : 0px 3px 0px 3px;
		text-align : center;
		font-family : 'hanna', 'Nanum Gothic', sans-serif;
		color : #222;
		font-size : 13px;
		cursor : pointer;
	}

	input[type=number]::-webkit-inner-spin-button,
	input[type=number]::-webkit-outer-spin-button {
  	-webkit-appearance: none;
  	margin: 0;
	}

	.viewOptionMenu {
		float : right;
	}

	.viewOptionMenu>span {
		display : inline-block;
		height : 20px;
		width : 30px;
		background-size : 100% 100%;
		background-position : center;
		background-repeat : no-repeat;
		cursor : pointer;
		margin-left : 15px;
	}

	#mapViewBtn {
		background-image : url("../img/map.svg");
	}

	#listViewBtn {
		background-image : url("../img/boardlist.svg");
	}
</style>

<script type="text/javascript" src="../lib/jquery/jquery.js"></script>
<script src="/magic-deal/js/common.js"></script>
<script src="/magic-deal/semantic/semantic.min.js"></script>
</head>
<body>
<aside>
	<div id="asideBox">
		<div id="resultBoxWrap">
			<span id="boxLabel">
				&gt;&nbsp;&nbsp;물품 검색 결과 (256)
			</span>
			<div id="resultBox"></div>
			<div id="pageBox">
				<input type="button" value="페이징" />
			</div>
		</div>
	</div>
</aside>
<header>
	<div class="ui search">
  		<div class="ui icon input">
    		<input class="prompt" type="text" placeholder="원하는 지역을 검색하세요" style="font-size:12px; width:200px;"/>
   			 <i class="search icon"></i>
  		</div>
  	<div class="results"></div>
	</div>
	<div>
		<div id="loginNsignupBtn" class="ui icon label">
			<i class="user violet icon"></i>
			<a class="detail">로그인 및 회원가입</a>
		</div>
	</div>
	<img src="../img/logo1.png"/>
</header>
<div id="navBtn" class="ui icon button small black">
	<i class="sidebar icon"></i>
</div>
<nav class="ui vertical menu">
	<a class="item">
      <i class="home large orange icon"></i>메인
    </a>
    <a class="item">
      <i class="gift large orange icon"></i>물품등록
    </a>
    <a class="item">
      <i class="child large orange icon"></i>마이페이지
    </a>
    <a class="item">
      <i class="info circle large orange icon"></i>고객센터
    </a>
</nav>
<div id="searchCondition">
	<div id="tradeSelect" class="selectMenu">
		<span>모든거래</span>
		<span>모든거래</span>
		<span>팝니다</span>
		<span>삽니다</span>
	</div>

	<div id="qualitySelect" class="selectMenu">
		<span>모든품질</span>
		<span>모든품질</span>
		<span>A등급</span>
		<span>B등급 이상</span>
		<span>C등급 이상</span>
	</div>

	<div class="priceMenu">
		<label>가격 제한 </label>
		<input type="number" />만 ~
		<input type="number" />만
		<input type="button" value="적용" />
	</div>

	<div class="viewOptionMenu">
		<span id="mapViewBtn" title="지도보기">
		</span>
		<span id="listViewBtn" title="리스트보기">
		</span>
	</div>
</div>
<div id="mapBox">
	<div id="map">
		<div id="loadingContainer">
			<div class="loadingIconBox">
				<div class="loadingPointer">
					<div class="loadingPointerDot"></div>
				</div>
				<div class="loadingBottom">

				</div>
			</div>
			<span>loading...</span>
		</div>
	</div>
</div>

<div class="ui modal loginModal">
  <i class="close icon"></i>
  <div class="header">
    <div class="ui orange ribbon label">
    	Log in / Sign up
    </div>
  </div>
  <div class="content" style="text-align:center;">
        <div class="ui small left icon input" style="margin-bottom:15px;">
			<input type="text" placeholder="아이디를 입력하세요"/>
			<i class="user icon"></i>
		</div>
		<div class="ui small left icon input">
			<input type="password" placeholder="비밀번호를 입력하세요"/>
			<i class="privacy icon"></i>
		</div>
  </div>
  <div class="actions">
    <div class="ui black deny button">
      Log in
    </div>
    <div class="ui positive right labeled icon button">
      Sign up
      <i class="sign in icon"></i>
    </div>
  </div>
</div>
<script>
	var mHeight = parseInt($("#map").css("height"));
	$("#loadingContainer").css("top", mHeight/2-50);
</script>

<script type="text/javascript" src="/magic-deal/custom_lib/jsonData.js"></script>
<script type="text/javascript" src="http://apis.daum.net/maps/maps3.js?apikey=f395cc95b7a2033371e67babc4b49930&libraries=services,clusterer"></script>

<script>
	// custom variable
	var levelVal = 4;
	var minLev = 4;
	var maxLev = 12;
	var mBound = {};
	var currBndMarkers = [];
	var currCenter = {};

	// 지하철역 표시 관련 변수
	var subwayIcon = null;
	var subwayMarkers = [];
	var subwayCircle = null;

	// 거리측정 라인 관련 변수
	var drawLine;
	var drawDot;
	var drawDot;
	var drawFlag;
	var centerPosition;
	var resultOverlay;

	// 지도 관련 script
	var container = $("#map").get()[0];
	var options = {
		center : new daum.maps.LatLng(35.20222852723306, 129.06547785358867),
		level : levelVal,
		scrollwheel : false
	};

	// 지도 loading
	var map = new daum.maps.Map(container, options);


	// 클러스터 생성
	var clusterer = new daum.maps.MarkerClusterer({
		map: map,
		averageCenter : true,
		minLevel : 3,
		minClusterSize : 1,
		gridSize : 80,
		disableClickZoom : true,
		styles: [{
			width : '53px',
			height : '53px',
			background : "rgba(100,0,255,0.7)",
			color : '#fff',
			textAlign : 'center',
			lineHeight : '46px',
			borderRadius : '50%',
			fontWeight : 'bold',
			border : "5px solid rgba(255,255,255,0.3)",
			transition : "all 0.5s"
		},
		{
			background : "rgba(255,150,150,0.7)"
		},
		{
			background : "rgba(255,0,0,0.7)"
		}]
	});

	clusterer.setCalculator(function(size) {
		var index;

		if (size<10) {
			index = 0;
		} else if (size<50) {
			index = 1;
		} else {
			index = 2;
		}

		return index;
	});

	// 마커 생성 (불러온 data marker 생성)
	var markers = $(addrData).map(function(i, position) {
        // 좌표정보로 마커 위치 지정
		var marker = new daum.maps.Marker({
            position : new daum.maps.LatLng(position.lat, position.lng)
        });

		// 마커에 커스텀 데이터 삽입
		marker.pdt_info = {
			productName : "삼성 아티브 북",
			price : 500000
		};

		return marker;
    });

	// services로 places 등록
	var places = new daum.maps.services.Places();


	// 초기 bound 설정
	mBound = map.getBounds();
	currCenter = map.getCenter();

	// 근처 역 정보 불러오기
	var callback = function(status, result) {
		if(status === daum.maps.services.Status.OK) {
			result.places.forEach(function(data) {
				addMarker(data);
			});
		}
	};

	var makeCircle = function(position) {
		return new daum.maps.Circle({
					center : new daum.maps.LatLng(position.Ab, position.zb),
					radius : 1000,		// 반경 1km
					strokeWeight : 1,
					strokeColor : '#222',
					strokeOpacity : 0.2,
					strokeStyle : 'solid',
					fillColor : '#FFC810',
					fillOpacity : 0.2
				});
	}

	// 이미지 마커 추가 함수
	var addMarker = function(place) {
		if(subwayIcon==null) {
			subwayIcon = new daum.maps.MarkerImage(
				'../img/subway_station.png',
				new daum.maps.Size(23, 22)
			);
		}
		var aMarker = new daum.maps.Marker({
			map : map,
			position : new daum.maps.LatLng(place.latitude, place.longitude),
			image : subwayIcon
		});
		subwayMarkers.push(aMarker);

		// 이미지 마커에 추가할 이벤트
		daum.maps.event.addListener(aMarker, 'click', function() {
			// 거리 측정 직선 생성
			if(!drawFlag) {
				drawFlag = true;
				centerPosition = this.getPosition();
				console.dir(centerPosition);
				if(!drawLine) {
					drawLine = new daum.maps.Polyline({
						strokeWeight : 3,
						strokeColor : 'tomato',
						strokeOpacity : 1,
						strokeStyle : 'solid'
					});
				}

				if(!drawDot) {
					drawDot = new daum.maps.CustomOverlay({
						content : "<span class='dot'></span>",
						zIndex : 1
					});
				}

				if(resultOverlay != null) {
					resultOverlay.setMap(null);
					resultOverlay = null;
				}

				drawDot.setPosition(centerPosition);
				drawDot.setMap(map);
			}
		});

		daum.maps.event.addListener(aMarker, 'mouseover', function() {
				var position = this.getPosition();
				subwayCircle = makeCircle(position);

				subwayCircle.setMap(map);
		});

		daum.maps.event.addListener(aMarker, 'mouseout', function() {
			if(subwayCircle!=null) {
				subwayCircle.setMap(null);
				subwayClickFlag = false;
			}
		});
	};

	// Map Event 등록
	$("#map").on('mousewheel', function(event) {
		event.preventDefault();
		event.stopPropagation();
		if(event.originalEvent.wheelDelta > 0) {
			// 확대
			if(levelVal > minLev) {
				map.setLevel(--levelVal, {animate : {duration: 300}});
			}
		}else if(event.originalEvent.wheelDelta < 0) {
			// 축소
			if(levelVal < maxLev) {
				map.setLevel(++levelVal, {animate : {duration: 300}});
			}
		}
	});

	// 지하철 역부터 거리측정시 사용되는 이벤트
	daum.maps.event.addListener(map, 'mousemove', function(mouseEvent) {
		if(drawFlag) {
			var mousePosition = mouseEvent.latLng;
			var linePath = [centerPosition, mousePosition];
			drawLine.setPath(linePath);

			var length = drawLine.getLength();

			if(length > 0) {
				drawLine.setMap(map);
			}else {
				drawLine.setMap(null);
			}
		}
	});

	daum.maps.event.addListener(map, 'click', function(mouseEvent) {
		if(drawFlag) {
			var rClickPosition = mouseEvent.latLng;
			var distance = Math.round(drawLine.getLength());
			var content = getTimeHTML(distance);

			showDistance(content, rClickPosition);

			drawLine.setMap(null);
			drawDot.setMap(null);
			drawFlag = false;
		}
	});

	var showDistance = function(content, lastPosition) {
		resultOverlay = new daum.maps.CustomOverlay({
			content : content,
			map : map,
			position : lastPosition
		});

		resultOverlay.setMap(map);
		console.log(content, lastPosition);
	};

	var getTimeHTML = function(distance) {
		// 도보의 시속은 평균 4km/h 이고 도보의 분속은 67m/min입니다
		var walkkTime = distance / 67 | 0;
		var walkHour = '', walkMin = '';

		// 계산한 도보 시간이 60분 보다 크면 시간으로 표시합니다
		if (walkkTime > 60) {
			walkHour = '<span class="number">' + Math.floor(walkkTime / 60) + '</span>시간 '
		}
		walkMin = '<span class="number">' + walkkTime % 60 + '</span>분'

		// 자전거의 평균 시속은 16km/h 이고 이것을 기준으로 자전거의 분속은 267m/min입니다
		var bycicleTime = distance / 227 | 0;
		var bycicleHour = '', bycicleMin = '';

		// 계산한 자전거 시간이 60분 보다 크면 시간으로 표출합니다
		if (bycicleTime > 60) {
			bycicleHour = '<span class="number">' + Math.floor(bycicleTime / 60) + '</span>시간 '
		}
		bycicleMin = '<span class="number">' + bycicleTime % 60 + '</span>분'

		// 거리와 도보 시간, 자전거 시간을 가지고 HTML Content를 만들어 리턴합니다
		var content = '<span class="distanceInfo" onclick="closeDistanceOverlay()">';
		content += '    <h3 class="distanceTitle">거리정보</h3>';
		content += '    <p>';
		content += '        <span class="distanceLabel">총거리</span><span class="distanceNumber">' + distance + 'm</span>';
		content += '    </p>';
		content += '    <p>';
		content += '        <span class="distanceLabel">도보</span><span class="distanceNumber">' + walkHour + walkMin + '</span>';
		content += '    </p>';
		content += '    <p>';
		content += '        <span class="distanceLabel">자전거</span><span class="distanceNumber">' + bycicleHour + bycicleMin + '</span>';
		content += '    </p>';
		content += '</span>'

		return content;
	};

	var closeDistanceOverlay = function() {
		resultOverlay.setMap(null);
		resultOverlay = null;
	};

	//idle : 중심 좌표, 확대수준 변경시 발생
	daum.maps.event.addListener(map, 'idle', function() {
		mBound = map.getBounds();
		currCenter = map.getCenter();

		// 확대수준 변경, 중심좌표 변경 시 화면에 표시된 cluster가 바뀜
		clusterer.redraw();

		if(resultOverlay!=null) {
			closeDistanceOverlay();
		}

		// 최대 확대 수준에서만 역정보 제공
		if(levelVal<=5&&subwayMarkers.length==0) {
			places.categorySearch('SW8', callback, {
				location : currCenter,
				radius : 2000
			});
		}else if(levelVal>5){
			if(subwayMarkers.length > 0) {
				subwayMarkers.forEach(function(data) {
					data.setMap(null);
				});

				subwayMarkers = [];
			}
		}
	});

	/*
	daum.maps.event.addListener(map, 'center_changed', function() {

	});

	daum.maps.event.addListener(map, 'zoom_changed', function() {
		mBound = map.getBounds();
		currCenter = map.getCenter();
		places.categorySearch('SW8', callback, {
			location : currCenter
		});
	});
	*/


	daum.maps.event.addListener(clusterer, 'clusterover', function(cluster) {
		$(cluster.getClusterMarker().Eb).css({
			'border' : '5px solid rgba(255,210,10,1)',
			'transform' : 'scale(1.2)'
		});
	});

	daum.maps.event.addListener(clusterer, 'clusterout', function(cluster) {
		$(cluster.getClusterMarker().Eb).css({
			'border' : '5px solid rgba(255,255,255,0.3)',
			'transform' : 'scale(1.0)'
		});
	});

	daum.maps.event.addListener(clusterer, 'clustered', function(clusters) {
		$("#navBox").scrollTop(0);
		currBndMarkers = clusters.filter(function(cluster) {
			var center = cluster.getCenter();
			if(mBound.T<center.zb&&mBound.aa>center.zb
			   &&mBound.ba>center.Ab&&mBound.ca<center.Ab)
			return cluster;
		});
		$("#resultBox").empty();
		currBndMarkers.forEach(function(cluster) {
			var currMarkers = cluster.getMarkers();
			currMarkers.forEach(function(marker) {
				var productBox = "<div class='productBox'>"
					productBox += "<span class='productImg' style='background-image:url(../img/product.jpg)'></span>";
					productBox += "<span class='productInfo'>";
					productBox += "<table>";
					productBox += "<tr style='border-bottom:1px solid #e8e8e8;'>";
					productBox += "<th style='border-right:1px solid #e8e8e8;'>상품명</th>";
					productBox += "<td>"+marker.pdt_info.productName+"</td>";
					productBox += "<th style='border-right:1px solid #e8e8e8; border-left:1px solid #e8e8e8;'>가격</th>";
					productBox += "<td>"+marker.pdt_info.price+"</td>";
					productBox += "</tr>";
					productBox += "<tr style='border-bottom:1px solid #e8e8e8;'>";
					productBox += "<th style='border-right:1px solid #e8e8e8;'>판매자</th>";
					productBox += "<td>소진</td>";
					productBox += "<th style='border-left:1px solid #e8e8e8; border-right:1px solid #e8e8e8;'>품질등급</th>";
					productBox += "<td>A</td>";
					productBox += "</tr>";
					productBox += "<tr>";
					productBox += "<th style='border-right:1px solid #e8e8e8;'>위치</th>";
					productBox += "<td colspan='3'>서울특별시 강남구 선릉로 112길</td>";
					productBox += "</tr>";
					productBox += "</table>";
					productBox += "</div>"
				$("#resultBox").append(productBox);
			});
		});
	});

	daum.maps.event.addListener(clusterer, 'clusterclick', function(cluster) {
		if(drawFlag) {
			var rClickPosition = cluster.getCenter();
			var distance = Math.round(drawLine.getLength());
			var content = getTimeHTML(distance);

			showDistance(content, rClickPosition);

			drawLine.setMap(null);
			drawDot.setMap(null);
			drawFlag = false;
		}else {
			$("#resultBox").empty();
			if(resultOverlay!=null) {
				closeDistanceOverlay();
			}
			$("#navBox").scrollTop(0);
			var clickMarkers = cluster.getMarkers();
			clickMarkers.forEach(function(marker) {
				var productBox = "<div class='productBox'>"
					productBox += "<span class='productImg' style='background-image:url(../img/product.jpg)'></span>";
					productBox += "<span class='productInfo'>";
					productBox += "<table>";
					productBox += "<tr>";
					productBox += "<th>상품명</th>";
					productBox += "<td>"+marker.pdt_info.productName+"</td>";
					productBox += "<th>가격</th>";
					productBox += "<td>"+marker.pdt_info.price+"</td>";
					productBox += "</tr>";
					productBox += "<tr>";
					productBox += "<th>판매자</th>";
					productBox += "<td>소진</td>";
					productBox += "<th>품질등급</th>";
					productBox += "<td>A</td>";
					productBox += "</tr>";
					productBox += "<tr>";
					productBox += "<th>위치</th>";
					productBox += "<td colspan='3'>서울특별시 강남구 선릉로 112길</td>";
					productBox += "</tr>";
					productBox += "</table>";
					productBox += "</div>"
				$("#resultBox").append(productBox);
			});
		}
	});

	// nav event setting

	// 클러스터에 마커 등록
	clusterer.addMarkers(markers);
	$("#loadingContainer").remove();
</script>



<script>
// DOM Control 관련 script
	var listOpenFlag = false;

	$("#tradeSelect").on("click", function() {
		$(this).toggleClass("tradeSelectOpen");
		return false;
	});

	$("#qualitySelect").on("click", function() {
		$(this).toggleClass("qualitySelectOpen");
		return false;
	});

	$("#tradeSelect>span").on("click", function() {
		$("#tradeSelect").find("span:eq(0)").remove();
		$(this).clone().prependTo("#tradeSelect");
		$("#tradeSelect").trigger("click");
		return false;
	});

	$("#qualitySelect>span").on("click", function() {
		$("#qualitySelect").find("span:eq(0)").remove();
		$(this).clone().prependTo("#qualitySelect");
		$("#qualitySelect").trigger("click");
		return false;
	});

	$("#resultBox").css("height", parseInt($("#asideBox").css("height"))-60);

	$(window).resize(function() {
		if(!listOpenFlag) {
			$("#resultBox").css("height", parseInt($("#asideBox").css("height"))-60);
		}
	});


	// 지도 보기
	$("#mapViewBtn").on("click", function() {
		listOpenFlag = false;
		$("aside").add("#asideBox").css({
			width : "400px"
		});
		$("#resultBox").css({
			width : "400px"
		});
		$("#asideBox").css("overflow-y","auto");
		$("#resultBox").css("overflow","");
		$("#resultBox").css("height", parseInt($("#asideBox").css("height"))-60);
		$("#pageBox").css("width", "400px");
	});

	// 리스트 보기
	/**
	*
	*	차후 리스트 보기시 페이징을 고려하여 보여질 product의 갯수만큼 height를 설정해 주어야 한다.
	*/
	$("#listViewBtn").on("click", function() {
		listOpenFlag = true;
		$("aside").add("#asideBox").css({
			width : "100%"
		});
		$("#resultBox").css({
			width : "100%",
			height : "1500px"
		});
		$("#resultBox").css("overflow","hidden");
		$("#asideBox").css("overflow-y", "scroll");
		$("#pageBox").css("width", "100%");
	});
</script>
</body>
</html>
