<!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8"/>
<link rel="stylesheet" type="text/css" href="/g3/semantic/semantic.min.css">

<style> 
	#chart{
		width : 1024px;
		height : 700px;
	} 
	
	circle {
		stroke : #222;
		stroke-width : 2px;
		stroke-opacity: .7;
		fill-opacity : .8;
	}
	
	g {
		cursor : pointer;
	}
	
	text {
		cursor : pointer;
	}
	
	svg {
		
	}
	
	svg .axis {
		stroke:orange;
		stroke-width:1;
		stroke-opacity:0.5;
		stroke-linecap:round;
		stroke-dasharray : 20, 10, 5;
	}
	
	svg .axis-text {
		font-size : 13px;
		font-weight : bold;
		fill : #222;
		opacity : 0.8;
		cursor : default;
	}
	
	.innerCircle {
		background-image : url("../img/cimg/cimg13.JPG");
		background-size : 100% 100%;
	}
	
	#informationBox {
		width : 300px;
		height : 200px;
		position : absolute;
		display : none;
	}
	
	#popup-header {
		height : 40px;
		padding : 5px;
		width : 100%;
	}
	
	#popup-header>.right.floated.meta {
		margin-top : 5px;
	}
	
	#popup-content {
		width : 100%;
		height : 160px;
		padding : 5px;
	}
	
	#popup-content>div {
		display : inline-block;
		float : left;
	}
	
	.content-image {
		margin-right : 5px;
		width : 150px;
		height : 150px;
	}
	
	.content-info {
		font-size : 12px;
		position : relative;
		height : 100%;
		width : 135px;
		height : 150px;
	}
	
	.content-info>.info-title {
		font-size : 14px;
	}
		
	.content-info>.info-btn-box {
		position : absolute;
		bottom : 0px;
		width : 100%;
	}
	
	.product-owner {
		display : inline-block;
		margin-right : 10px;
	}
	
	.like-rating {
		color : #888;
		font-size : 12px;
	}
</style>

<script src="/g3/custom_lib/jquery-1.11.2.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="/g3/semantic/semantic.min.js"></script>
</head>
<body>
	<div id="chart">
		<svg width="100%" height="100%">
			<defs>
				<clipPath id="clipCircle0" >
					<circle r="60" cx="0" cy="0"></circle>
				</clipPath>
				
				<clipPath id="clipCircle1" >
					<circle r="45" cx="0" cy="0"></circle>
				</clipPath>
				
				<clipPath id="clipCircle2" >
					<circle r="30" cx="0" cy="0"></circle>
				</clipPath>
				
				<clipPath id="clipCircle3" >
					<circle r="15" cx="0" cy="0"></circle>
				</clipPath>
			</defs>
			<line x1="0" y1="50%" x2="100%" y2="50%" class="axis" />
			<line x1="50%" y1="0" x2="50%" y2="100%" class="axis" />
			<image x="0%" y="50%" width="50px" height="30px" xlink:href="../img/chart/axis_distance_down.png"/>
			<image x="95%" y="50%" width="50px" height="30px" xlink:href="../img/chart/axis_distance_up.png"/>
			<image x="50%" y="0%" width="50px" height="30px" xlink:href="../img/chart/axis_price_up.png"/>
			<image x="50%" y="95%" width="50px" height="30px" xlink:href="../img/chart/axis_price_down.png"/>
		</svg>
	</div>
	<input id="distance-delete" type="button" value="거리 제거하기" />
	
	<input id="default-view" type="button" value="기존 차트로 돌아가기" />
	
	<div id="informationBox" class="ui card">
		<div id="popup-header" class="content">
			<div class="right floated meta">
				<a><i class="close icon"></i></a>
			</div>
			<img class="ui avatar image" src="../img/sample-test/profile-exam.JPG"/>
			<span class="product-owner">김흥국</span>
			<span class="like-rating">
				<i class="heart red outline mini icon"></i>
				<span class="like-count">124</span> likes
			</span>
		</div>
		<div id="popup-content" class="content">
			<div class="content-image">
				<img src="../img/cimg/cimg14.JPG" width="150px" height="150px" style="border-radius:5px;"/>
			</div>
			
			<div class="content-info">
				<p class="info-title">
					<i class="cube red icon"></i>
					<span id="info-product-name">
						<b>칼하트 후드집업</b>
					</span>
				</p>
				<p id="info-price"></p>
				<p id="info-distance"></p>
				<p id="info-quality"></p>
				<div class="info-btn-box">
					<button class="ui tiny black button" style="width:100%;">
						<i class="zoom icon"></i> 상세보기
					</button>
				</div>
			</div>
		</div>
	</div>
	
	<script>
	
		var svg;
		
		// 바인딩된 데이터
		var dataEles;
		var pdatas;

		var cWidth;
		var cHeight;
		
		// axis
		var xAxis;
		var yAxis;
		
		// event용 변수
		var mouseDownFlag = false;
		
		// 각종 scale
		var distanceScale;
		var qualityScale;
		var color;
		var imageSizeScale;
		var priceScale;
		var rectSizeScale;
		var fontSizeScale;
		
		var fontCut = function(val, num) {
			var size = [8, 6, 4, 0]
			if(val.length>size[num]) {
				return val.substr(0,size[num]) + "...";
			}else {
				return val;
			}
		};
		
		var dataTargetAni = function(d, cx, cy) {
			svg.append("circle")
			  .attr("cx", cx)
			  .attr("cy", cy)
			  .attr("r", qualityScale(d.quality)+5)
			  .style({
				 "stroke" : "red",
				 "strkoe-width" : "2",
				 "fill" : "none",
				 "stroke-opacity" : ".0"
			  })
			  .transition()
			  .ease("quad")
			  .duration(250)
			  .style({
				  "stroke-opacity" : ".7"
			  })
			  .transition()
			  .ease("ease")
			  .duration(200)
			  .style({
				  "stroke-opacity" : ".0"
			  })
			  .remove();
			
			svg.append("circle")
			  .attr("cx", cx)
			  .attr("cy", cy)
			  .attr("r", qualityScale(d.quality)+10)
			  .style({
				 "stroke" : "red",
				 "strkoe-width" : "2",
				 "fill" : "none",
				 "stroke-opacity" : ".0"
			  })
			  .transition()
			  .ease("quad")
			  .duration(350)
			  .style({
				  "stroke-opacity" : ".7"
			  })
			  .transition()
			  .ease("quad")
			  .duration(150)
			  .style({
				  "stroke-opacity" : ".0"
			  })
			  .remove();
		}
		
				
		//data 최초 로딩 및 그리기
		var drawData = function(data) {
			pdatas = data;

			color = d3.scale.category10();

			priceScale = d3.scale.linear().domain([ d3.min(data, function(d) {
				return d.price;
			}), d3.max(data, function(d) {
				return d.price;
			}) ]).range([ 100, cHeight - 100 ]);

			distanceScale = d3.scale.linear().domain(
					[ d3.min(data, function(d) {
						return d.distance;
					}), d3.max(data, function(d) {
						return d.distance;
					}) ]).range([ 100, cWidth - 100 ]);

			qualityScale = d3.scale.linear().domain([ 0, 1, 2, 3 ]).range(
					[ 60, 45, 30, 15 ]);
			
			imageSizeScale = d3.scale.linear()
							   .domain([0, 1, 2, 3])
							   .range([100, 75, 50, 25]);
			
			rectSizeScale = d3.scale.linear()
			   					  .domain([0, 1, 2, 3])
			   					  .range([30, 25, 20, 10]);
			
			fontSizeScale = d3.scale.linear()
				 				  .domain([0, 1, 2, 3])
				  				  .range([12, 7, 1, 0]);

			
			dataEles = svg.selectAll("g")
						 .data(data)
						 .enter()
						 .append("g")
						 .attr("transform", function(d) {
							return "translate("
									+ distanceScale(d.distance)
									+ ","
									+ priceScale(d.price)
									+")";
						 })
						 .attr("clip-path", function(d) {
							return "url(#clipCircle"+d.quality+")"; 
						 });
						 
			dataEles.append("image")
					.attr("x", function(d) {
						return -imageSizeScale(d.quality);
					})
					.attr("y", function(d) {
						return -imageSizeScale(d.quality);
					})
					.attr("width", function(d) {
						return imageSizeScale(d.quality)*2;
					})
					.attr("height", function(d) {
						return imageSizeScale(d.quality)*2;
					})
					.attr("xlink:href", function(d) {
						return "../img/cimg/"+d.img;
					})
					.style("opacity", "0.9");
					
			
			dataEles.append("rect")
					.attr("x", function(d) {
						return -imageSizeScale(d.quality);
					})
					.attr("y", "0")
					.attr("width", function(d) {
						return imageSizeScale(d.quality)*2;
					})
					.attr("height", function(d) {
						return rectSizeScale(d.quality);
					})
					.style("fill", function(d) {
						return color(Math.random()*10+1);
					})
					.style({
							"fill-opacity" : "0.9",
							"stroke" : "#f8f8f8",
							"stroke-width" : "1"	
					});
				
			dataEles.append("text")
					.attr("x", "0")
					.attr("y", function(d) {
						return (rectSizeScale(d.quality)/2+3)+"px";
					})
					.attr("text-anchor", "middle")
					.attr("textLength", function(d) {
						return imageSizeScale(d.quality);
					})
					.attr("lengthAdjust", "spacing")
					.style("font-size", function(d) {
						return fontSizeScale(d.quality);
					})
					.style("fill", "#fff")
					.text(function(d) {
						return fontCut(d.productName, d.quality);
					});
			
			
			dataEles.on("mousedown", function(d) {
				$("#informationBox").css("display", "none");
				d3.select(this)
				  .selectAll("image")
				  .transition()
				  .ease("quad")
				  .duration(100)
				  .style({
					 "opacity" : "0.6"
				  });
				var matrix = this.transform.baseVal[0].matrix;
				var xPosition = matrix.e;
				var yPosition = matrix.f;
				
				dataTargetAni(d, xPosition, yPosition);
				
				mouseDownFlag = true;
			 })
			 .on("mouseup", function() {
				d3.select(this)
				  .selectAll("image")
				  .transition()
				  .ease("quad")
				  .duration(150)
				  .style({
					 "opacity" : "0.9"
				  });
				mouseDownFlag = false;
			 })
			 .on("mousemove", function() {
				 if(mouseDownFlag) {
					 $(this).appendTo("#chart > svg");
					 var x = event.offsetX;
					 var y = event.offsetY;
					 $(this).attr("transform", "translate("+x+","+y+")");
				 }
				 d3.event.stopPropagation();
			 })
			 .on("click", function(d) {
				$("#informationBox").css({
					left : event.offsetX+10,
					top : event.offsetY+10,
					display : "block"
				});
				
				$("#informationBox>#popup-header>.product-owner").text(d.id);
				$("#informationBox>#popup-header>.like-rating>.like-count").text(d.key);		
				
				$("#informationBox>#popup-content>.content-image>img").attr("src", "../img/cimg/"+d.img);
				$("#info-product-name").text(d.productName);
				$("#info-price").text(d.price);
				$("#info-distance").text(d.distance);
				$("#info-quality").text(d.quality);
				
				$(this).appendTo("#chart > svg");
				
				d3.event.stopPropagation();
			 })
			 .on("mouseover", function() {
				d3.select(this)
				  .selectAll("rect")
				  .transition()
				  .ease("quad")
				  .duration(150)
				  .style({
					  "stroke": "#fbbd08",
					  "stroke-width" : "4"
				  });
			 })
			 .on("mouseout", function() {
				 d3.select(this)
				  .selectAll("rect")
				  .transition()
				  .ease("quad")
				  .duration(150)
				  .style({
					  "stroke": "#f8f8f8",
					  "stroke-width" : "1"
				  })
				 if(mouseDownFlag) {
					 d3.select(this)
					  .selectAll("image")
					  .transition()
					  .ease("quad")
					  .duration(150)
					  .style({
						 "opacity" : "0.9"
					  });
				 }
			 });
		};
		
		
		// dom event 등록
		$("#distance-delete").on("click", function() {
			dataEles.transition()
					.ease("quad")
					.duration(500)
					.attr("transform", function(d, i) {
						return "translate("
								+ (Math.random()*824+100)
								+ ","
								+ (Math.random()*500+100)+")";
					});		
		});
		
		$("#default-view").on("click", function() {
			dataEles.transition()
					.ease("quad")
					.duration(500)
					.attr("transform", function(d) {
						return "translate("
								+ distanceScale(d.distance)
								+","
								+ priceScale(d.price)+")";
					});
		});
		
		
		// 실행 함수
		(function() {
			cWidth = parseInt($("#chart").css("width"));
			cHeight = parseInt($("#chart").css("height"));

			svg = d3.select("#chart>svg");
			
			$("#chart>svg").on("click", function() {
				$("#informationBox").css("display", "none");
			});

			d3.json("../custom_lib/product.json", drawData);
		})();

	</script>
</body>
</html>